{
  "stats": {
    "suites": 68,
    "tests": 55,
    "passes": 55,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-03T07:29:14.499Z",
    "end": "2020-02-03T07:29:14.570Z",
    "duration": 71,
    "testsRegistered": 55,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b5b54b87-81a4-4e5c-8797-e30a8f36b995",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f8b222f-518b-4bb0-a2c1-c6934313e09e",
          "title": "Rule",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/assert.js",
          "file": "/test/src/assert.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "42aef224-0227-49df-8a34-94911bfe0526",
              "title": "@fire",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/assert.js",
              "file": "/test/src/assert.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Rule @fire should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Assert(c1);\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Assert, Believe, __, _likes, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} likes Fish`);\n});\nrnr.post(m);\nreturn rnr.run();",
                  "err": {},
                  "uuid": "ded983e7-7183-4349-8877-b30b63538a27",
                  "parentUUID": "42aef224-0227-49df-8a34-94911bfe0526",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ded983e7-7183-4349-8877-b30b63538a27"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2dddbe50-1c9f-4a03-addb-8f96dded6ac5",
          "title": "Async",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/async.js",
          "file": "/test/src/async.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Async \"before each\" hook",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "5dacca6b-3cba-4d20-be4c-8421b4ff8619",
              "parentUUID": "2dddbe50-1c9f-4a03-addb-8f96dded6ac5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Async \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "cf36d2ee-f001-4b15-b20d-e798898beb60",
              "parentUUID": "2dddbe50-1c9f-4a03-addb-8f96dded6ac5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d5f9461a-7cb6-4648-8965-9279d233a804",
              "title": "@call",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/async.js",
              "file": "/test/src/async.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Async @call should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "ddb5bc0c-616f-430c-b406-f31b701c3553",
                  "parentUUID": "d5f9461a-7cb6-4648-8965-9279d233a804",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ddb5bc0c-616f-430c-b406-f31b701c3553"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2de1d054-3fdb-4ace-a2d8-c4cecd57dda5",
          "title": "Attempt",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/attempt.js",
          "file": "/test/src/attempt.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Attempt should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Attempt(new Achieve(_Bob, _get, _Fish));\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Attempt, Achieve, __, _get, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} getting Fish`);\n});\nrnr.post(m);\nreturn rnr.run();",
              "err": {},
              "uuid": "2415ca39-193e-4e86-a66f-560dce97ad61",
              "parentUUID": "2de1d054-3fdb-4ace-a2d8-c4cecd57dda5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2415ca39-193e-4e86-a66f-560dce97ad61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbe0cf35-e49a-4d9a-9591-2f78e6ea6d95",
          "title": "Await",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/await.js",
          "file": "/test/src/await.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Await \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "d3f92f9f-a636-4ed4-ae52-ce1c7795dc42",
              "parentUUID": "cbe0cf35-e49a-4d9a-9591-2f78e6ea6d95",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Await \"after each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "61240170-2ac4-4ea4-b50d-ced9f468989f",
              "parentUUID": "cbe0cf35-e49a-4d9a-9591-2f78e6ea6d95",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Await should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bar = async () => console.log(await foo());\nreturn bar;",
              "err": {},
              "uuid": "3bd19ff7-96d3-47d5-a61d-6307930059a8",
              "parentUUID": "cbe0cf35-e49a-4d9a-9591-2f78e6ea6d95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should work also",
              "fullTitle": "Await should work also",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bar = async () => console.log(await foo2());\nreturn bar;",
              "err": {},
              "uuid": "d68847c6-c07b-4107-b0f6-e56f0644a042",
              "parentUUID": "cbe0cf35-e49a-4d9a-9591-2f78e6ea6d95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bd19ff7-96d3-47d5-a61d-6307930059a8",
            "d68847c6-c07b-4107-b0f6-e56f0644a042"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8960853-8edc-4a70-9ed7-80356b73771e",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/call.js",
          "file": "/test/src/call.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Task \"before each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "9c6414a5-6e36-4d01-a804-2177718e5e25",
              "parentUUID": "c8960853-8edc-4a70-9ed7-80356b73771e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Task \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "f91c76d4-90e0-4940-af19-32cd0f887d4d",
              "parentUUID": "c8960853-8edc-4a70-9ed7-80356b73771e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "401f840a-93ed-4976-9387-ca21145f54c6",
              "title": "@call",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/call.js",
              "file": "/test/src/call.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @call should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "471f2b75-a096-48cd-b812-00123f62722c",
                  "parentUUID": "401f840a-93ed-4976-9387-ca21145f54c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "471f2b75-a096-48cd-b812-00123f62722c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9ff45c39-4ecf-439f-93f3-fdf8acad11e6",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/chain.js",
          "file": "/test/src/chain.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6504f903-3347-44d5-a367-ffffc4aa9c36",
              "title": "@chain",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/chain.js",
              "file": "/test/src/chain.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @chain should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "00589324-9747-4745-8c9a-1cb6e87857fc",
                  "parentUUID": "6504f903-3347-44d5-a367-ffffc4aa9c36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00589324-9747-4745-8c9a-1cb6e87857fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c15d2603-fe4b-4713-a341-dbad5aaf312b",
          "title": "Config",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/config.js",
          "file": "/test/src/config.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Config should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "$$.$('Config Results');\n$$._(config());\n$$.$('Environment');\nreturn $$._(process.env);",
              "err": {},
              "uuid": "f83abfdc-4fc9-4347-83f2-1385017a4c56",
              "parentUUID": "c15d2603-fe4b-4713-a341-dbad5aaf312b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f83abfdc-4fc9-4347-83f2-1385017a4c56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0faee532-2679-4a3f-bbd2-459505d2394c",
          "title": "Context",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
          "file": "/test/src/context.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "28de7ee2-d474-4c0a-8bb0-346aa529e432",
              "title": "@find",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
              "file": "/test/src/context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Context @find should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let r = ctx.find(Believe, _Bob, _likes, _Fish);\n$$.$(\"Bob, likes, Fish\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, _Fish);\n$$.$(\"_, likes, Fish\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, __);\n$$.$(\"_, likes, _\");\nreturn $$._(r.toString());",
                  "err": {},
                  "uuid": "8be9c8f4-e27e-401e-8c6f-0ba310af384a",
                  "parentUUID": "28de7ee2-d474-4c0a-8bb0-346aa529e432",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8be9c8f4-e27e-401e-8c6f-0ba310af384a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3d1411be-382d-4479-9fa5-1795e1e6437f",
              "title": "@match",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
              "file": "/test/src/context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Context @match should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const matches = ctx.match(Believe, _Bob, _likes, _Fish);\n$$.$(\"Bob, likes, Fish\");\nfor (r of matches) {\n  $$._(r.toString())\n}",
                  "err": {},
                  "uuid": "c398b495-9004-4e39-892e-02484cbabba1",
                  "parentUUID": "3d1411be-382d-4479-9fa5-1795e1e6437f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work",
                  "fullTitle": "Context @match should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const matches = ctx.match(Believe, __, _likes, __);\n$$.$(\"ctx.match(__, _likes, __)\");\nfor (r of matches) {\n  $$._(r.toString())\n}",
                  "err": {},
                  "uuid": "135fef4a-8af7-4989-8821-597129cef2af",
                  "parentUUID": "3d1411be-382d-4479-9fa5-1795e1e6437f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c398b495-9004-4e39-892e-02484cbabba1",
                "135fef4a-8af7-4989-8821-597129cef2af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f4fb3ab2-1bfc-4858-be6a-c18701ab36a9",
              "title": "@iterator",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
              "file": "/test/src/context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Context @iterator should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "for (c of ctx) {\n  $$._(c);\n}",
                  "err": {},
                  "uuid": "e520bb0e-fc87-40cb-a585-c0acf22c85cc",
                  "parentUUID": "f4fb3ab2-1bfc-4858-be6a-c18701ab36a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e520bb0e-fc87-40cb-a585-c0acf22c85cc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ad964b5-0d75-43af-b3df-4e704c00a66d",
          "title": "Method",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/count.js",
          "file": "/test/src/count.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d3fc1da2-a4ff-457d-a672-e9b6830748be",
              "title": "@counter",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/count.js",
              "file": "/test/src/count.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Method @counter should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "d6fc715c-4b0c-43cc-99b2-b17a830096d0",
                  "parentUUID": "d3fc1da2-a4ff-457d-a672-e9b6830748be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6fc715c-4b0c-43cc-99b2-b17a830096d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "40819733-b260-4907-a5ce-8e7900c37661",
          "title": "Sequence",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/dsl.js",
          "file": "/test/src/dsl.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "22bdb910-ede6-4bf7-8b53-3e71c20925a7",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/dsl.js",
              "file": "/test/src/dsl.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Sequence @action should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(s1)",
                  "err": {},
                  "uuid": "a9612d1f-e925-423b-b835-fca0c5e03506",
                  "parentUUID": "22bdb910-ede6-4bf7-8b53-3e71c20925a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9612d1f-e925-423b-b835-fca0c5e03506"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6f61c1fb-d23c-435e-b518-c8f5228cb929",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/hello.js",
          "file": "/test/src/hello.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6c3d743a-f860-444b-bef7-4384c948dfbe",
              "title": "@perform",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/hello.js",
              "file": "/test/src/hello.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @perform should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const action = function() {\n  this.def(onAttempt(Achieve, null, _hello, null), function() {\n    this.def(onAttempt(Achieve, null, _say, __), function() {\n      const $t = this.msg.data.obj;\n      return $$.log($t);\n    });\n    this.perform(null, _say, \"Hello World\");\n    return this.perform(null, _say, \"Goodbye World\");\n  });\n  return this.perform(null, _hello, null);\n};\nreturn runner_().run(module_(action));",
                  "err": {},
                  "uuid": "b4e94f10-2d0a-48fa-bdca-ed9e5c768558",
                  "parentUUID": "6c3d743a-f860-444b-bef7-4384c948dfbe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4e94f10-2d0a-48fa-bdca-ed9e5c768558"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bed30578-9345-40c1-b260-c8e2a1a03680",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/import.js",
          "file": "/test/src/import.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "39e23e8a-f418-4d6d-8436-f4c3ef574f77",
              "title": "@import",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/import.js",
              "file": "/test/src/import.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @import should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(module_(function() {\n  this.import(require, './cleavers');\n  $$.$(\"All Clauses\");\n  return $$._(_$(this.rnr.ctx.clauses));\n})",
                  "err": {},
                  "uuid": "433d8a19-8037-4e02-a3cc-fa7208f90e6e",
                  "parentUUID": "39e23e8a-f418-4d6d-8436-f4c3ef574f77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "433d8a19-8037-4e02-a3cc-fa7208f90e6e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "500143da-271d-4ddb-8f4b-ed14ebf237fa",
          "title": "TIterable",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/iterable.js",
          "file": "/test/src/iterable.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "TIterable should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "class A {\n  static initClass() {\n    this.iterator(function*() {\n      yield 'a';\n      return yield 'b';\n    });\n  }\n}\nA.initClass();\nclass B extends A {\n  static initClass() {\n    this.TIterable();\n  }\n  *iterator() {\n    yield* super.iterator();\n    return yield 'c';\n  }\n}\nB.initClass();\nconst b = new B();\nfor (l of b) {\n  $$._(l)\n}",
              "err": {},
              "uuid": "931f5292-3286-4110-bf4b-1979e666d792",
              "parentUUID": "500143da-271d-4ddb-8f4b-ed14ebf237fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "931f5292-3286-4110-bf4b-1979e666d792"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "966996ec-b6be-4e96-8b8a-90f0004256ca",
          "title": "Loop",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/loop.js",
          "file": "/test/src/loop.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3981c43f-e0e9-4f62-9d24-871b1ab21418",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/loop.js",
              "file": "/test/src/loop.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Loop @action should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = method_(function() {\n  return this.loop(function() {\n    return this.task(function() {\n      $$._(\"Hello\");\n      this.count = 10;\n      return this.main = function() {\n        $$._(this.count--);\n        if(this.count <= 0) {\n          $$._('Inner');\n          return this.fail();\n        }\n      };}).task(() => $$._(\"Loop\"));\n  });\n});\nreturn runner_().run(t1);",
                  "err": {},
                  "uuid": "4d407ada-adfc-45fc-a4ad-1a86abaa43a8",
                  "parentUUID": "3981c43f-e0e9-4f62-9d24-871b1ab21418",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d407ada-adfc-45fc-a4ad-1a86abaa43a8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c900b776-00bf-4349-82d1-13111eb33737",
          "title": "Matching",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
          "file": "/test/src/match.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0e052fde-969b-4417-859b-6e21a58aa5ea",
              "title": "Values",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "match __, null",
                  "fullTitle": "Matching Values match __, null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(__, null)).to.be.true",
                  "err": {},
                  "uuid": "c9c23b43-49b5-407c-a6fe-546340ddfdba",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match null, null",
                  "fullTitle": "Matching Values match null, null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(null, null)).to.be.true",
                  "err": {},
                  "uuid": "558c6f3e-8ee2-4548-96ec-95aef3585985",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match null, 'hello'",
                  "fullTitle": "Matching Values match null, 'hello'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(null, 'hello')).to.be.false",
                  "err": {},
                  "uuid": "af98e9a8-03b2-49f4-9438-1a7159fdded6",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match 'hello', 'hello'",
                  "fullTitle": "Matching Values match 'hello', 'hello'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match('hello', 'hello')).to.be.true",
                  "err": {},
                  "uuid": "be18b8e5-5563-4539-9ddf-59288f4c2884",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match 'hello', 'goodbye'",
                  "fullTitle": "Matching Values match 'hello', 'goodbye'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match('hello', 'goodbye')).to.be.false",
                  "err": {},
                  "uuid": "3fc6e0c3-f3b8-4fc1-a3f8-40ac142223b8",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match ((x) -> x == 10), 10",
                  "fullTitle": "Matching Values match ((x) -> x == 10), 10",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match((x => x === 10), 10)).to.be.true",
                  "err": {},
                  "uuid": "8f3c1f23-fcc2-48e7-80a1-e7b73e614288",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match ((x) -> x == 10), 20",
                  "fullTitle": "Matching Values match ((x) -> x == 10), 20",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match((x => x === 10), 20)).to.be.false",
                  "err": {},
                  "uuid": "976e508e-b9b7-4f2e-af06-6a37034af8da",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match ((x) -> x > 10), 20",
                  "fullTitle": "Matching Values match ((x) -> x > 10), 20",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match((x => x > 10), 20)).to.be.true",
                  "err": {},
                  "uuid": "3cb53e99-cfd3-44f4-9f5d-516bc4f04160",
                  "parentUUID": "0e052fde-969b-4417-859b-6e21a58aa5ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9c23b43-49b5-407c-a6fe-546340ddfdba",
                "558c6f3e-8ee2-4548-96ec-95aef3585985",
                "af98e9a8-03b2-49f4-9438-1a7159fdded6",
                "be18b8e5-5563-4539-9ddf-59288f4c2884",
                "3fc6e0c3-f3b8-4fc1-a3f8-40ac142223b8",
                "8f3c1f23-fcc2-48e7-80a1-e7b73e614288",
                "976e508e-b9b7-4f2e-af06-6a37034af8da",
                "3cb53e99-cfd3-44f4-9f5d-516bc4f04160"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6738037b-1830-477f-97b1-12495bb0e93e",
              "title": "Regular Expressions",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "match(re, 'test.js')",
                  "fullTitle": "Matching Regular Expressions match(re, 'test.js')",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(re, 'test.js')).to.be.true",
                  "err": {},
                  "uuid": "080edaad-5c31-48a7-bc2e-6e214f556e0c",
                  "parentUUID": "6738037b-1830-477f-97b1-12495bb0e93e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match(re, 'test.txt')",
                  "fullTitle": "Matching Regular Expressions match(re, 'test.txt')",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(re, 'test.txt')).to.be.false",
                  "err": {},
                  "uuid": "65e69c7a-1643-4789-acc7-614e0dfa774d",
                  "parentUUID": "6738037b-1830-477f-97b1-12495bb0e93e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "080edaad-5c31-48a7-bc2e-6e214f556e0c",
                "65e69c7a-1643-4789-acc7-614e0dfa774d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "59e8127d-2136-4cad-80f9-04d5be8ee20d",
              "title": "Variable Binding",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "match($('x'), 10)",
                  "fullTitle": "Matching Variable Binding match($('x'), 10)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//$$._ match($('x'), 10)\n  expect(match($('x'), 10)).to.have.property('$x', 10)",
                  "err": {},
                  "uuid": "9f4d37a6-0ab8-4db4-aa74-3a0565f60a30",
                  "parentUUID": "59e8127d-2136-4cad-80f9-04d5be8ee20d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f4d37a6-0ab8-4db4-aa74-3a0565f60a30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f48bf0bd-b21d-46ae-b271-3bf86e43d470",
              "title": "Clauses",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "believe_(_Bob, _likes, _Fish).match Believe, __, _likes, __",
                  "fullTitle": "Matching Clauses believe_(_Bob, _likes, _Fish).match Believe, __, _likes, __",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(believe_(_Bob, _likes, _Fish).match(Believe, __, _likes, __)).to.be.true",
                  "err": {},
                  "uuid": "58dc84b8-e144-40d9-bdad-99e55be7801c",
                  "parentUUID": "f48bf0bd-b21d-46ae-b271-3bf86e43d470",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "believe_(_Bob, _likes, _Fish).match Believe, $('x'), _likes, $('y')",
                  "fullTitle": "Matching Clauses believe_(_Bob, _likes, _Fish).match Believe, $('x'), _likes, $('y')",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = believe_(_Bob, _likes, _Fish).match(Believe, $('x'), _likes, $('y'));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "f629a5a1-ab32-4b6e-9713-f8e003de5691",
                  "parentUUID": "f48bf0bd-b21d-46ae-b271-3bf86e43d470",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "58dc84b8-e144-40d9-bdad-99e55be7801c",
                "f629a5a1-ab32-4b6e-9713-f8e003de5691"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "74b14b46-892f-482f-b1a9-584591f95451",
              "title": "Messages",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "assert_(Believe, _Bob, _likes, _Fish).match Assert, Believe, $('x'), _likes, $('y')",
                  "fullTitle": "Matching Messages assert_(Believe, _Bob, _likes, _Fish).match Assert, Believe, $('x'), _likes, $('y')",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = assert_(Believe, _Bob, _likes, _Fish).match(Assert, Believe, $('x'), _likes, $('y'));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "0962a56d-b5a7-44eb-b582-a383778d2917",
                  "parentUUID": "74b14b46-892f-482f-b1a9-584591f95451",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0962a56d-b5a7-44eb-b582-a383778d2917"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "93f50837-3eca-412a-afe6-ac9f14d485d9",
              "title": "Triggers",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "fullTitle": "Matching Triggers onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = onAssert(Believe, $('x'), _likes, $('y')).match(assert_(Believe, _Bob, _likes, _Fish));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "35e9adf9-50e8-48ed-b130-822359a6f00f",
                  "parentUUID": "93f50837-3eca-412a-afe6-ac9f14d485d9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "onAssert(Believe, $('x'), _likes, $('y')).match attempt_(Believe, _Bob, _likes, _Fish)",
                  "fullTitle": "Matching Triggers onAssert(Believe, $('x'), _likes, $('y')).match attempt_(Believe, _Bob, _likes, _Fish)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = onAssert(Believe, $('x'), _likes, $('y')).match(attempt_(Believe, _Bob, _likes, _Fish));\nreturn expect(result).to.be.false;",
                  "err": {},
                  "uuid": "5d682eb1-8bea-465c-8b5e-6358f1ae5a83",
                  "parentUUID": "93f50837-3eca-412a-afe6-ac9f14d485d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35e9adf9-50e8-48ed-b130-822359a6f00f",
                "5d682eb1-8bea-465c-8b5e-6358f1ae5a83"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e11beec1-4cb3-4272-b654-f513e597201c",
              "title": "Triggers with Xtras",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "fullTitle": "Matching Triggers with Xtras onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = onAssert(Believe, $('x'), _likes, $('y')).match(assert_(Believe, _Bob, _likes, _Fish));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "82f19226-9e88-47e5-9489-3021694704ff",
                  "parentUUID": "e11beec1-4cb3-4272-b654-f513e597201c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82f19226-9e88-47e5-9489-3021694704ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "22f96bc4-8c8c-4bfd-b32c-3a594cd5420d",
          "title": "Message",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/message.js",
          "file": "/test/src/message.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6cc94611-c247-4355-a8a7-2e65acea972d",
              "title": "@match",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/message.js",
              "file": "/test/src/message.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Message @match should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = new Context();\nconst c1 = believe_(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = believe_(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.h2(\"All Clauses\");\n$$._(String(ctx));\n$$._(ctx);\n$$.h2('Message Matching');\nconst m = new Assert(c1);\n$$._(m.match(Assert, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Retract, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Assert, Believe, _Joe, _likes, _Fish));\nreturn $$._(m.match(Assert, Achieve, _Joe, _likes, _Fish));",
                  "err": {},
                  "uuid": "0151a8e7-8cb2-4f51-92d7-53873d12eab7",
                  "parentUUID": "6cc94611-c247-4355-a8a7-2e65acea972d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0151a8e7-8cb2-4f51-92d7-53873d12eab7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5efb3e2e-6371-43f4-b032-319bd56be233",
          "title": "Module",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/module.js",
          "file": "/test/src/module.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2aedc80f-8da8-43ae-a3c7-2022f00e1b4e",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/module.js",
              "file": "/test/src/module.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Module @action should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = context_();\nconst c1 = believe_(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = believe_(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Assert(c1);\n$$.$('Begin Task Execution');\nconst exports = module_(function() {\n  this.def(new Trigger(Assert, Believe, __, _likes, _Fish), function() {\n    const self = this;\n    return this.task(function() {\n      $$._('Task Fire 1:');\n      return this.perform(self.msg.data.subj, _get, _Fish);}).task(() => $$._('Task Fire 2:'));\n  });\n  this.def(new Trigger(Attempt, Achieve, __, _get, _Fish), function() {\n    const self = this;\n    return this.task(() => $$._(_$(self.msg.data.subj) + ' is getting Fish.'));\n  });\n  this.defg(new Trigger(Attempt, Achieve, null, _impasse, null), () => //$$._ String(this.rnr.ctx)\n  $$._('Impassed'));\n  return this.post(m);\n});\n\nreturn runner_().run(exports);",
                  "err": {},
                  "uuid": "c93303e4-50af-4019-ab52-2849c88b3f0b",
                  "parentUUID": "2aedc80f-8da8-43ae-a3c7-2022f00e1b4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c93303e4-50af-4019-ab52-2849c88b3f0b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5aa853e-63b2-48fa-8848-78492b56ad20",
          "title": "TNode",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/node.js",
          "file": "/test/src/node.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "TNode should work",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let node;\n$$.$('class Plain');\n$$._(Plain);\n//\n$$.$('class Node');\n$$._(Node.toString());\n$$.$('class Node.prototype');\n$$._(Node.prototype);\n//\n$$.$('class DerivedNode');\n$$._(DerivedNode.toString());\n$$.$('class DerivedNode.prototype');\n$$._(DerivedNode.prototype);\n//\n$$.$('n1.Node');\nconst n1 = new Node();\nn1.node1 = 0;\nn1.node2 = 2;\nn1.node1 = 1;\n$$._(n1);\n$$.$('nodes');\nfor (node of n1) {\n  $$._(node);\n}\n$$.$('n2.DerivedNode');\nconst n2 = new DerivedNode(3);\n$$._(n2);\n$$.$('nodes');\nfor (node of n2) {\n  $$._(node);\n}",
              "err": {},
              "uuid": "73f4aa0e-ec72-4b35-bdfd-f88b122b7f58",
              "parentUUID": "e5aa853e-63b2-48fa-8848-78492b56ad20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73f4aa0e-ec72-4b35-bdfd-f88b122b7f58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0887c29-b2da-4a31-9ab9-badea86fcfc0",
          "title": "Parallel",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/parallel.js",
          "file": "/test/src/parallel.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "da9cad64-45b7-4a45-806f-1f42028cde28",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/parallel.js",
              "file": "/test/src/parallel.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Parallel @action should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = parallel_(function() {\n  this.counter(1, 5, function() {\n    const counter1 = this;\n    return this.task(() => $$.log(`Counter 1:  ${counter1.value}`));\n  });\n  return this.counter(1, 10, function() {\n    const counter2 = this;\n    return this.task(() => $$.log(`Counter 2:  ${counter2.value}`));\n  });\n});\nreturn runner_().run(t1);",
                  "err": {},
                  "uuid": "da7085cc-5bbe-4107-96f8-5d28ee918a99",
                  "parentUUID": "da9cad64-45b7-4a45-806f-1f42028cde28",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da7085cc-5bbe-4107-96f8-5d28ee918a99"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e2d64672-2703-4260-8b7d-410e905492f2",
          "title": "Propose",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/propose.js",
          "file": "/test/src/propose.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Propose should work",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\n$$._(String(ctx));\nconst m = new Propose(new Achieve(_Bob, _eat, _Fish));\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Attempt, Achieve, __, _eat, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} buying Fish`);\n});\nrnr.def(new Trigger(Attempt, Achieve, __, _eat, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} catching Fish`);\n});\nrnr.def(new Trigger(Attempt, Achieve, null, _impasse, null), () => //$$._ String(this.rnr.ctx)\n$$._('Impassed'));\nrnr.post(m);\nreturn rnr.run();",
              "err": {},
              "uuid": "88b066d2-328e-4cf0-866a-67753b58dd71",
              "parentUUID": "e2d64672-2703-4260-8b7d-410e905492f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88b066d2-328e-4cf0-866a-67753b58dd71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "96079130-0d28-4767-9392-c1addf5488bf",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qfilter.js",
          "file": "/test/src/qfilter.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fa341335-2c9b-48bd-afbe-33759ced2783",
              "title": "Filter",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qfilter.js",
              "file": "/test/src/qfilter.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query Filter should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('bob.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst _$x = new Variable('$x');\nconst _$y = new Variable('$y');\nconst _$z = new Variable('$z');\n$$.$(`\\\nctx.query Believe, _$x, _likes, _$y\n.and Believe, _$z, _likes, _$y\\\n`\n);\nctx.query(Believe, _$x, _likes, _$y)\n.and(Believe, _$z, _likes, _$y)\n.exec(binder => $$._(binder));\n$$.$(`\\\nctx.query Believe, _$x, _likes, _$y\n.and Believe, _$z, _likes, _$y\n.filter (binder) -> binder.$x != binder.$z\\\n`\n);\nreturn ctx.query(Believe, _$x, _likes, _$y)\n.and(Believe, _$z, _likes, _$y)\n.filter(function(binder) { const {$x, $z} = binder; return $x !== $z; })\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "f5ee2a3b-0a88-41e9-9e5a-e95aab802982",
                  "parentUUID": "fa341335-2c9b-48bd-afbe-33759ced2783",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5ee2a3b-0a88-41e9-9e5a-e95aab802982"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aaeb94df-ec2a-4db0-8857-b62723f8e058",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qnegclause.js",
          "file": "/test/src/qnegclause.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7b52fc7d-2df5-43df-a41a-4cc923454190",
              "title": "NegClause",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qnegclause.js",
              "file": "/test/src/qnegclause.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query NegClause should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('bob.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst _$x = new Variable('$x');\nconst _$y = new Variable('$y');\nconst _$z = new Variable('$z');\n$$.$(`\\\nctx.query Believe, _$x, _likes, _$y\n.not Believe, _$x, _likes, _Chips\\\n`\n);\nreturn ctx.query(Believe, _$x, _likes, _Fish)\n.not(Believe, _$x, _likes, _Chips)\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "0015b59b-6712-4dbd-b730-9dcc47e146b4",
                  "parentUUID": "7b52fc7d-2df5-43df-a41a-4cc923454190",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0015b59b-6712-4dbd-b730-9dcc47e146b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d22f3fc-c1c0-4d47-89de-d5c3d4091cf4",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qtyped.js",
          "file": "/test/src/qtyped.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5c24ac61-2369-4e56-ad5a-c2837ac77e22",
              "title": "Typed",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qtyped.js",
              "file": "/test/src/qtyped.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query Typed should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('blocks.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst $x = new Variable('$x', v => v instanceof Block);\nconst $y = new Variable('$y');\n$$.$(\"ctx.query Believe, $x, _on, $y\");\nreturn ctx.query(Believe, $x, _on, $y)\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "29266f2f-9dcb-496a-9b76-5d8035423083",
                  "parentUUID": "5c24ac61-2369-4e56-ad5a-c2837ac77e22",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29266f2f-9dcb-496a-9b76-5d8035423083"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eabcf6ec-5654-43e3-84f7-c05642f5447b",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/query.js",
          "file": "/test/src/query.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "260952de-b7a9-4413-ae0a-4bbab5aa6f42",
              "title": "Basic",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/query.js",
              "file": "/test/src/query.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query Basic should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('cleavers.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst _$x = new Variable('$x');\nconst _$d = new Variable('$d');\nconst _$w = new Variable('$w');\n$$.$(\"ctx.query Believe, _$x, _dad, _$d\");\nctx.query(Believe, _$x, _dad, _$d)\n.exec(binder => $$._(binder));\n$$.$(`\\\nctx.query Believe, _$x, _dad, _$d\n.and Believe, _$d, _wife, _$w\\\n`\n);\nreturn ctx.query(Believe, _$x, _dad, _$d)\n.and(Believe, _$d, _wife, _$w)\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "93cc054f-e694-4c43-be13-4396b4f72ce6",
                  "parentUUID": "260952de-b7a9-4413-ae0a-4bbab5aa6f42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93cc054f-e694-4c43-be13-4396b4f72ce6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "762bf36d-a6ba-406c-bf44-4aee463b0d53",
          "title": "Retract",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/retract.js",
          "file": "/test/src/retract.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Retract should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let c;\nconst rnr = new Runner();\nconst {\n  ctx\n} = rnr;\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"Context Before\");\nfor (c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Retract(c1);\n$$.$('Begin Task Execution');\nrnr.def(new Trigger(Retract, Believe, __, _likes, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} doesn't like Fish`);\n});\nrnr.post(m);\nreturn rnr.run().then(function() {\n  $$.$(\"Context After\");\n  for (c of ctx.clauses) {\n    $$._(c.toString());\n  }\n});",
              "err": {},
              "uuid": "148adbf5-8341-4a5f-abc2-66a717cb0eca",
              "parentUUID": "762bf36d-a6ba-406c-bf44-4aee463b0d53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "148adbf5-8341-4a5f-abc2-66a717cb0eca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fddf3fb1-597e-4ab3-8411-95c85e5aab63",
          "title": "Rule",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/rule.js",
          "file": "/test/src/rule.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ab917e45-4b14-4512-a59e-0d0b52109959",
              "title": "@fire",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/rule.js",
              "file": "/test/src/rule.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Rule @fire should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Assert(c1);\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Assert, Believe, __, _likes, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return this.task(function() {\n    $$._('A');\n    return this.perform($x, _get, _Fish);}).task(() => $$._('B'));\n});\nrnr.def(new Trigger(Attempt, Achieve, __, _get, _Fish),  function() {\n  const $x = this.msg.data.subj;\n  return $$._(_$($x) + ' is getting Fish.');\n});\nrnr.post(m);\nreturn rnr.run();",
                  "err": {},
                  "uuid": "f7e807b5-a32d-4d9d-89e1-a2ce091ac99b",
                  "parentUUID": "ab917e45-4b14-4512-a59e-0d0b52109959",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7e807b5-a32d-4d9d-89e1-a2ce091ac99b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d200ad0-9e1f-459a-9788-b2523873d4bc",
          "title": "Runner",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/runner.js",
          "file": "/test/src/runner.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Runner \"before each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "1cbcb1f6-0ad0-4f6c-94c1-1e6b2d8f0a2f",
              "parentUUID": "3d200ad0-9e1f-459a-9788-b2523873d4bc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Runner \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "279be15e-ec2d-41c2-acbf-e7b0bc9edb9d",
              "parentUUID": "3d200ad0-9e1f-459a-9788-b2523873d4bc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b10ede7b-9a18-460f-a40a-023fa5822aca",
              "title": "@run",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/runner.js",
              "file": "/test/src/runner.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Runner @run should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_(__main).run()",
                  "err": {},
                  "uuid": "fdc2fc6d-7e1b-44fe-aa31-0e041ce876de",
                  "parentUUID": "b10ede7b-9a18-460f-a40a-023fa5822aca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdc2fc6d-7e1b-44fe-aa31-0e041ce876de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f2578fb-b804-412d-bf7a-9f9ce8353586",
          "title": "Sequence",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/sequence.js",
          "file": "/test/src/sequence.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "49830ccd-c365-4807-820b-ec6ae9a1359c",
              "title": "In Parallel",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/sequence.js",
              "file": "/test/src/sequence.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Sequence In Parallel should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = sequence_(function() {\n  this.task(() => $$._('A'));\n  this.task(() => $$._('B'));\n  return this.task(() => $$._('C'));\n});\nconst t2 = sequence_(function() {\n  this.task(() => $$._('D'));\n  this.task(function() {\n    $$._('E');\n    return this.fail();\n  });\n  return this.task(() => $$._('F'));\n});\nreturn runner_().run(t1, t2);",
                  "err": {},
                  "uuid": "ff6bc159-e3d3-43ff-8e61-cfcef9d3e8f0",
                  "parentUUID": "49830ccd-c365-4807-820b-ec6ae9a1359c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff6bc159-e3d3-43ff-8e61-cfcef9d3e8f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80aef806-4e85-43ce-b904-179d290fecaf",
          "title": "Streamer",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/streamer.js",
          "file": "/test/src/streamer.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a2d13783-4f09-4d9b-8e77-60608b408e11",
              "title": "@chain",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/streamer.js",
              "file": "/test/src/streamer.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Streamer @chain should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = chain_(function() {\n  return this.chain(new ReadFile($$.dataPath('test.txt')))\n  .chain(new ConsoleWriter);\n});\nreturn runner_().run(t1);",
                  "err": {},
                  "uuid": "db48608f-910e-4393-a43d-8d0f5b04ad31",
                  "parentUUID": "a2d13783-4f09-4d9b-8e77-60608b408e11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db48608f-910e-4393-a43d-8d0f5b04ad31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57632945-b36b-4095-a6ee-6bfba5d1b537",
          "title": "Stringer",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/stringer.js",
          "file": "/test/src/stringer.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Stringer should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stringer = new Stringer();\nstringer.write('Hello');\nstringer.write('World');\n$$._(stringer);\n$$._(stringer.toString());\nreturn $$._(String(stringer));",
              "err": {},
              "uuid": "7b619dd7-d31a-4d5c-89df-ca4c2f70cfc2",
              "parentUUID": "57632945-b36b-4095-a6ee-6bfba5d1b537",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b619dd7-d31a-4d5c-89df-ca4c2f70cfc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ea487be2-cb47-4b6b-a684-57bb4f071a52",
          "title": "Term",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/typed.js",
          "file": "/test/src/typed.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4ea97ee8-0840-495a-b943-e658669b03ef",
              "title": "typed",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/typed.js",
              "file": "/test/src/typed.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Term typed should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//t = $_ 'Block1', 'Block'\nclass Table extends Term {}\nconst t1 = $_('Table1', Table);\n$$._(t1);\nconst t2 = $_('Block1', 'Block');\nreturn $$._(t2);",
                  "err": {},
                  "uuid": "71f60fb3-33e1-4974-8bb5-ade2db83eb8f",
                  "parentUUID": "4ea97ee8-0840-495a-b943-e658669b03ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71f60fb3-33e1-4974-8bb5-ade2db83eb8f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e775b497-8e0d-40a8-af78-bd18f175ba33",
          "title": "Unit",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/unit.js",
          "file": "/test/src/unit.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0862cf55-e5e2-43c5-960f-d68cc0066aaf",
              "title": "test",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/unit.js",
              "file": "/test/src/unit.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Unit test should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let {$$, unit_} = require('./common');\n$$ = unit_(module, $$);\nreturn $$._($$.stringify($$));",
                  "err": {},
                  "uuid": "57fc6bea-a894-4b0f-85c6-ea0ca8e6b938",
                  "parentUUID": "0862cf55-e5e2-43c5-960f-d68cc0066aaf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57fc6bea-a894-4b0f-85c6-ea0ca8e6b938"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95faf5a1-7de6-470a-8c5a-c00a02bc0d00",
          "title": "Clause",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/xtra.js",
          "file": "/test/src/xtra.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8301f459-1022-4c51-bbaf-7ce25745e833",
              "title": "@xtra",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/xtra.js",
              "file": "/test/src/xtra.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Clause @xtra should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = context_();\nconst c1 = believe_(_Bob, _likes, _Tuna, {with: _Cheese});\nctx.add(c1);\nconst c2 = believe_(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.h2(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\n$$.h2(\"Find in Context\");\nlet r = ctx.find(Believe, _Bob, _likes, _Tuna);\n$$.$(\"< Bob likes Tuna >\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, _Tuna);\n$$.$(\"< __ likes Tuna >\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, __);\n$$.$(\"< __ likes __ >\");\n$$._(r.toString());\n$$.h2(\"Message Matches\");\nconst m = new Assert(c1);\n$$._(m.match(Assert, Believe, __, _likes, _Tuna));\n$$._(m.match(Assert, Believe, _Bob, _likes, _Tuna));\n$$._(m.match(Assert, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Retract, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Assert, Believe, _Joe, _likes, _Fish));\nconst rnr = runner_();\nrnr.def(new OnAssert(Believe, __, _likes, _Tuna), function() {\n  const $x = this.msg.data.subj;\n  return this.task(function() {\n    $$._('A');\n    return this.perform($x, _get, _Fish);}).task(() => $$._('B'));\n});\nrnr.def(new OnAttempt(Achieve, __, _get, _Fish),  function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} is getting Fish.`);\n});\nrnr.post(m);\nreturn rnr.run();",
                  "err": {},
                  "uuid": "e7ea1ad2-fed3-4c08-b154-34e8cf0928ba",
                  "parentUUID": "8301f459-1022-4c51-bbaf-7ce25745e833",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e7ea1ad2-fed3-4c08-b154-34e8cf0928ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb39266e-56f5-4d24-9554-dbd32fb4bc4a",
          "title": "Yaml",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/yaml.js",
          "file": "/test/src/yaml.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Yaml should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get document, or throw exception on error\ntry {\n  const doc = yaml.safeLoad(fs.readFileSync($$.dataPath('cleavers.yml'), 'utf8'));\n  return console.log(doc);\n} catch (e) {\n  return console.log(e);\n}",
              "err": {},
              "uuid": "5c289c87-6bd1-4fec-a830-50bbdf6f02f0",
              "parentUUID": "eb39266e-56f5-4d24-9554-dbd32fb4bc4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c289c87-6bd1-4fec-a830-50bbdf6f02f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "186a9b9d-1b1e-4b0f-b326-4497faebce12",
          "title": "YamlContext",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/yamlcontext.js",
          "file": "/test/src/yamlcontext.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "YamlContext should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ctx = new YamlContext().load($$.dataPath('cleavers.yml'));\n$$._(ctx);\nreturn ctx.clauses.map((c) =>\n  $$._(_$(c)));",
              "err": {},
              "uuid": "5df27897-16b0-459a-bc3b-08a7a9488f9e",
              "parentUUID": "186a9b9d-1b1e-4b0f-b326-4497faebce12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5df27897-16b0-459a-bc3b-08a7a9488f9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "./test/report"
      },
      "version": "4.1.0"
    }
  }
}