{
  "stats": {
    "suites": 70,
    "tests": 56,
    "passes": 56,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-06T01:40:04.273Z",
    "end": "2020-02-06T01:40:04.357Z",
    "duration": 84,
    "testsRegistered": 56,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d3accaf9-718f-4e2b-b2f2-1165f7cdccb5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a584e9ec-94c2-4571-9681-454a5822b936",
          "title": "Agent",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/agent.js",
          "file": "/test/src/agent.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Agent \"before each\" hook",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "2cef7581-cbd4-48c2-834f-a3be29db7b55",
              "parentUUID": "a584e9ec-94c2-4571-9681-454a5822b936",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Agent \"after each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "3ac1b435-b522-4622-9f75-988785a2f7be",
              "parentUUID": "a584e9ec-94c2-4571-9681-454a5822b936",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "dac0d954-b20f-4869-82a8-8ec4a45c173f",
              "title": "@run",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/agent.js",
              "file": "/test/src/agent.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Agent @run should work",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "agent_(__main).run()",
                  "err": {},
                  "uuid": "5947c198-b6f4-4109-8bb7-70dcdebb916a",
                  "parentUUID": "dac0d954-b20f-4869-82a8-8ec4a45c173f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5947c198-b6f4-4109-8bb7-70dcdebb916a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d2421a8-527b-4416-ac9f-82c94b33016e",
          "title": "Rule",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/assert.js",
          "file": "/test/src/assert.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1795a656-4118-497d-9e44-b971cfbb4a12",
              "title": "@fire",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/assert.js",
              "file": "/test/src/assert.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Rule @fire should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Assert(c1);\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Assert, Believe, __, _likes, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} likes Fish`);\n});\nrnr.post(m);\nreturn rnr.run();",
                  "err": {},
                  "uuid": "88e55832-64a4-4466-aedf-78a2f743bf3d",
                  "parentUUID": "1795a656-4118-497d-9e44-b971cfbb4a12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "88e55832-64a4-4466-aedf-78a2f743bf3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c170a6e-0bdb-47fc-891c-bf69a2f304c6",
          "title": "Async",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/async.js",
          "file": "/test/src/async.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Async \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "931bcc65-56c1-4701-ad37-5cbd5b78481b",
              "parentUUID": "4c170a6e-0bdb-47fc-891c-bf69a2f304c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Async \"after each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "db7504b6-32ea-45d2-a9a7-f7ba4d8c6085",
              "parentUUID": "4c170a6e-0bdb-47fc-891c-bf69a2f304c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "568cd0c9-464f-47de-a4f3-ae93e9b6aa9d",
              "title": "@call",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/async.js",
              "file": "/test/src/async.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Async @call should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "ad067e88-8d34-47f3-ac81-66dcf3a0b26a",
                  "parentUUID": "568cd0c9-464f-47de-a4f3-ae93e9b6aa9d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad067e88-8d34-47f3-ac81-66dcf3a0b26a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55ba7127-63b9-4323-89e0-27eb1dce8044",
          "title": "Attempt",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/attempt.js",
          "file": "/test/src/attempt.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Attempt should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Attempt(new Achieve(_Bob, _get, _Fish));\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Attempt, Achieve, __, _get, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} getting Fish`);\n});\nrnr.post(m);\nreturn rnr.run();",
              "err": {},
              "uuid": "9607daf8-7448-4278-aebe-0f1996e43f62",
              "parentUUID": "55ba7127-63b9-4323-89e0-27eb1dce8044",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9607daf8-7448-4278-aebe-0f1996e43f62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d391ffa-3f3e-49c0-b1bb-36283b96614a",
          "title": "Await",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/await.js",
          "file": "/test/src/await.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Await \"before each\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "314e6346-dbd1-4911-9835-bde9704544a1",
              "parentUUID": "6d391ffa-3f3e-49c0-b1bb-36283b96614a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Await \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "8a200e51-0026-48d2-8c2e-35c6b36e3ac7",
              "parentUUID": "6d391ffa-3f3e-49c0-b1bb-36283b96614a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Await should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bar = async () => console.log(await foo());\nreturn bar;",
              "err": {},
              "uuid": "886965a6-9dec-4b25-b25a-c06ba736b285",
              "parentUUID": "6d391ffa-3f3e-49c0-b1bb-36283b96614a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should work also",
              "fullTitle": "Await should work also",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bar = async () => console.log(await foo2());\nreturn bar;",
              "err": {},
              "uuid": "a4508162-70b2-4f39-a195-c5a33f75f04f",
              "parentUUID": "6d391ffa-3f3e-49c0-b1bb-36283b96614a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "886965a6-9dec-4b25-b25a-c06ba736b285",
            "a4508162-70b2-4f39-a195-c5a33f75f04f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a20c7736-d529-4bbf-acf2-134c09fa5729",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/call.js",
          "file": "/test/src/call.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Task \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "75ed0ed6-3a40-44f4-8607-8872cf1ad8e4",
              "parentUUID": "a20c7736-d529-4bbf-acf2-134c09fa5729",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Task \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "858603f6-6190-499c-8673-0c1d17e6fb03",
              "parentUUID": "a20c7736-d529-4bbf-acf2-134c09fa5729",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "01454809-28ce-4803-bb78-59e202d0e6d2",
              "title": "@call",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/call.js",
              "file": "/test/src/call.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @call should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "bdfaa0bd-79f2-48ba-af3b-f5104f5b6020",
                  "parentUUID": "01454809-28ce-4803-bb78-59e202d0e6d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bdfaa0bd-79f2-48ba-af3b-f5104f5b6020"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "945e6512-d867-4cd6-8386-52ff6b7cde59",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/chain.js",
          "file": "/test/src/chain.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "73ae2a89-4f53-4980-a98e-e6f7cfa94c85",
              "title": "@chain",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/chain.js",
              "file": "/test/src/chain.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @chain should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "940ca8b9-b830-4e16-866f-2e0e4bd392ed",
                  "parentUUID": "73ae2a89-4f53-4980-a98e-e6f7cfa94c85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "940ca8b9-b830-4e16-866f-2e0e4bd392ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "69b3818b-0965-4c41-b708-4a51673d1a94",
          "title": "Config",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/config.js",
          "file": "/test/src/config.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Config should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "$$.$('Config Results');\n$$._(config());\n$$.$('Environment');\nreturn $$._(process.env);",
              "err": {},
              "uuid": "9777ef72-0006-4e64-a89c-40cdbca73113",
              "parentUUID": "69b3818b-0965-4c41-b708-4a51673d1a94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9777ef72-0006-4e64-a89c-40cdbca73113"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "918bc27b-beda-4ddb-a04e-63cb0a873136",
          "title": "Context",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
          "file": "/test/src/context.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cd1749a0-e20e-4871-8b87-670c2bc4ffee",
              "title": "@find",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
              "file": "/test/src/context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Context @find should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let r = ctx.find(Believe, _Bob, _likes, _Fish);\n$$.$(\"Bob, likes, Fish\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, _Fish);\n$$.$(\"_, likes, Fish\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, __);\n$$.$(\"_, likes, _\");\nreturn $$._(r.toString());",
                  "err": {},
                  "uuid": "66cc3a1d-f10e-4a54-b249-718049ab5c67",
                  "parentUUID": "cd1749a0-e20e-4871-8b87-670c2bc4ffee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "66cc3a1d-f10e-4a54-b249-718049ab5c67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "01d95379-114a-4893-9758-130259ef9a14",
              "title": "@match",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
              "file": "/test/src/context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Context @match should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const matches = ctx.match(Believe, _Bob, _likes, _Fish);\n$$.$(\"Bob, likes, Fish\");\nfor (r of matches) {\n  $$._(r.toString())\n}",
                  "err": {},
                  "uuid": "bd4f8c8d-333d-415b-8ffb-2d4a12bbbd9c",
                  "parentUUID": "01d95379-114a-4893-9758-130259ef9a14",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work",
                  "fullTitle": "Context @match should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const matches = ctx.match(Believe, __, _likes, __);\n$$.$(\"ctx.match(__, _likes, __)\");\nfor (r of matches) {\n  $$._(r.toString())\n}",
                  "err": {},
                  "uuid": "7633f90d-23cd-41bc-8da7-423945b2c5f5",
                  "parentUUID": "01d95379-114a-4893-9758-130259ef9a14",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd4f8c8d-333d-415b-8ffb-2d4a12bbbd9c",
                "7633f90d-23cd-41bc-8da7-423945b2c5f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "eac93426-03b3-4ca2-9288-01501635243d",
              "title": "@iterator",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/context.js",
              "file": "/test/src/context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Context @iterator should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "for (c of ctx) {\n  $$._(c);\n}",
                  "err": {},
                  "uuid": "823b3fba-d506-47da-88ed-8873d03e9825",
                  "parentUUID": "eac93426-03b3-4ca2-9288-01501635243d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "823b3fba-d506-47da-88ed-8873d03e9825"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ad2cc3cf-08d0-407c-9883-1d3e0a1f749e",
          "title": "Method",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/count.js",
          "file": "/test/src/count.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a3b059a4-a3dc-493f-8c58-7566a6d51560",
              "title": "@counter",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/count.js",
              "file": "/test/src/count.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Method @counter should work",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(t1)",
                  "err": {},
                  "uuid": "b3c5b3dd-f265-4bf4-9749-56726bbd0671",
                  "parentUUID": "a3b059a4-a3dc-493f-8c58-7566a6d51560",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b3c5b3dd-f265-4bf4-9749-56726bbd0671"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e4a0ef73-d305-4b5f-ae70-1abf5067d467",
          "title": "Sequence",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/dsl.js",
          "file": "/test/src/dsl.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6ab7ddb0-dca3-4d44-80ad-13720e87f557",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/dsl.js",
              "file": "/test/src/dsl.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Sequence @action should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(s1)",
                  "err": {},
                  "uuid": "ff2b80be-9ae4-482a-b33f-e1994b61c052",
                  "parentUUID": "6ab7ddb0-dca3-4d44-80ad-13720e87f557",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff2b80be-9ae4-482a-b33f-e1994b61c052"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9be2f48d-1d74-4f95-a68d-78886b953312",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/hello.js",
          "file": "/test/src/hello.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "709216b6-7275-4b99-9ee2-37d8756dcb58",
              "title": "@perform",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/hello.js",
              "file": "/test/src/hello.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @perform should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const action = function() {\n  this.def(onAttempt(Achieve, null, _hello, null), function() {\n    this.def(onAttempt(Achieve, null, _say, __), function() {\n      const $t = this.msg.data.obj;\n      return $$.log($t);\n    });\n    this.perform(null, _say, \"Hello World\");\n    return this.perform(null, _say, \"Goodbye World\");\n  });\n  return this.perform(null, _hello, null);\n};\nreturn runner_().run(module_(action));",
                  "err": {},
                  "uuid": "a5a21574-b3a0-4965-b89a-54f40ef34428",
                  "parentUUID": "709216b6-7275-4b99-9ee2-37d8756dcb58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5a21574-b3a0-4965-b89a-54f40ef34428"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "20f34066-1239-4391-b412-f0a1589ccb9e",
          "title": "Task",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/import.js",
          "file": "/test/src/import.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7a6ca0fa-b454-4982-8697-1a311cac2a6b",
              "title": "@import",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/import.js",
              "file": "/test/src/import.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Task @import should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_().run(module_(function() {\n  this.import(require, './cleavers');\n  $$.$(\"All Clauses\");\n  return $$._(_$(this.rnr.ctx.clauses));\n})",
                  "err": {},
                  "uuid": "478f3044-1e83-425a-b087-1f6e2736af46",
                  "parentUUID": "7a6ca0fa-b454-4982-8697-1a311cac2a6b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "478f3044-1e83-425a-b087-1f6e2736af46"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb78594e-8b05-46fe-a70d-5e8ce59697a1",
          "title": "TIterable",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/iterable.js",
          "file": "/test/src/iterable.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "TIterable should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "class A {\n  static initClass() {\n    this.iterator(function*() {\n      yield 'a';\n      return yield 'b';\n    });\n  }\n}\nA.initClass();\nclass B extends A {\n  static initClass() {\n    this.TIterable();\n  }\n  *iterator() {\n    yield* super.iterator();\n    return yield 'c';\n  }\n}\nB.initClass();\nconst b = new B();\nfor (l of b) {\n  $$._(l)\n}",
              "err": {},
              "uuid": "119f9f16-9838-4e3b-bff3-39b6ccc5ebdb",
              "parentUUID": "cb78594e-8b05-46fe-a70d-5e8ce59697a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "119f9f16-9838-4e3b-bff3-39b6ccc5ebdb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5d0f53ac-522c-4f8f-9151-c16ded7451dc",
          "title": "Loop",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/loop.js",
          "file": "/test/src/loop.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7347306d-6e80-4640-897a-c615206d92d7",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/loop.js",
              "file": "/test/src/loop.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Loop @action should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = method_(function() {\n  return this.loop(function() {\n    return this.task(function() {\n      $$._(\"Hello\");\n      this.count = 10;\n      return this.main = function() {\n        $$._(this.count--);\n        if(this.count <= 0) {\n          $$._('Inner');\n          return this.fail();\n        }\n      };}).task(() => $$._(\"Loop\"));\n  });\n});\nreturn runner_().run(t1);",
                  "err": {},
                  "uuid": "31a44b9a-5e9d-486d-aae0-1e530a7eb28b",
                  "parentUUID": "7347306d-6e80-4640-897a-c615206d92d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31a44b9a-5e9d-486d-aae0-1e530a7eb28b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f9bdb7d-eac5-4c34-9a00-44c7287979b2",
          "title": "Matching",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
          "file": "/test/src/match.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
              "title": "Values",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "match __, null",
                  "fullTitle": "Matching Values match __, null",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(__, null)).to.be.true",
                  "err": {},
                  "uuid": "7c939120-bd10-4a67-a3f8-202015d7ee95",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match null, null",
                  "fullTitle": "Matching Values match null, null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(null, null)).to.be.true",
                  "err": {},
                  "uuid": "94b08062-cfc2-4fa9-a292-6c720ec037c2",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match null, 'hello'",
                  "fullTitle": "Matching Values match null, 'hello'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(null, 'hello')).to.be.false",
                  "err": {},
                  "uuid": "39dcd23d-0f12-4e1c-86d0-1bdd05c2f80e",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match 'hello', 'hello'",
                  "fullTitle": "Matching Values match 'hello', 'hello'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match('hello', 'hello')).to.be.true",
                  "err": {},
                  "uuid": "b37ef66c-3c31-4a07-b49f-6a9d7072f0e5",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match 'hello', 'goodbye'",
                  "fullTitle": "Matching Values match 'hello', 'goodbye'",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match('hello', 'goodbye')).to.be.false",
                  "err": {},
                  "uuid": "613b5c32-f65e-4c2a-a8eb-0c82742fe7d3",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match ((x) -> x == 10), 10",
                  "fullTitle": "Matching Values match ((x) -> x == 10), 10",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match((x => x === 10), 10)).to.be.true",
                  "err": {},
                  "uuid": "bd26b46f-af4b-4993-ad7d-4dfc7d761e95",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match ((x) -> x == 10), 20",
                  "fullTitle": "Matching Values match ((x) -> x == 10), 20",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match((x => x === 10), 20)).to.be.false",
                  "err": {},
                  "uuid": "31580a9d-59d3-4205-8dbe-2e7b35226b97",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match ((x) -> x > 10), 20",
                  "fullTitle": "Matching Values match ((x) -> x > 10), 20",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match((x => x > 10), 20)).to.be.true",
                  "err": {},
                  "uuid": "9af646fc-66d4-4359-9a43-a406da570923",
                  "parentUUID": "f1fb975f-a04a-4a47-9853-5b08df9ea6a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c939120-bd10-4a67-a3f8-202015d7ee95",
                "94b08062-cfc2-4fa9-a292-6c720ec037c2",
                "39dcd23d-0f12-4e1c-86d0-1bdd05c2f80e",
                "b37ef66c-3c31-4a07-b49f-6a9d7072f0e5",
                "613b5c32-f65e-4c2a-a8eb-0c82742fe7d3",
                "bd26b46f-af4b-4993-ad7d-4dfc7d761e95",
                "31580a9d-59d3-4205-8dbe-2e7b35226b97",
                "9af646fc-66d4-4359-9a43-a406da570923"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "842abb3b-ac65-4a27-9d9c-72548091bfe9",
              "title": "Regular Expressions",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "match(re, 'test.js')",
                  "fullTitle": "Matching Regular Expressions match(re, 'test.js')",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(re, 'test.js')).to.be.true",
                  "err": {},
                  "uuid": "b247b1eb-16fc-4a98-8027-b011a0b788fd",
                  "parentUUID": "842abb3b-ac65-4a27-9d9c-72548091bfe9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "match(re, 'test.txt')",
                  "fullTitle": "Matching Regular Expressions match(re, 'test.txt')",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(match(re, 'test.txt')).to.be.false",
                  "err": {},
                  "uuid": "38246cef-6e2f-4867-874e-af836711aa72",
                  "parentUUID": "842abb3b-ac65-4a27-9d9c-72548091bfe9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b247b1eb-16fc-4a98-8027-b011a0b788fd",
                "38246cef-6e2f-4867-874e-af836711aa72"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "96dbc96e-0b56-4cd5-8959-f1e38b4c992f",
              "title": "Variable Binding",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "match($('x'), 10)",
                  "fullTitle": "Matching Variable Binding match($('x'), 10)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//$$._ match($('x'), 10)\n  expect(match($('x'), 10)).to.have.property('$x', 10)",
                  "err": {},
                  "uuid": "bc010236-61e3-4c01-830c-ce1f3d6879d8",
                  "parentUUID": "96dbc96e-0b56-4cd5-8959-f1e38b4c992f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc010236-61e3-4c01-830c-ce1f3d6879d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2ba2cfd4-ad3f-4433-ae7e-9c5461da3609",
              "title": "Clauses",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "believe_(_Bob, _likes, _Fish).match Believe, __, _likes, __",
                  "fullTitle": "Matching Clauses believe_(_Bob, _likes, _Fish).match Believe, __, _likes, __",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(believe_(_Bob, _likes, _Fish).match(Believe, __, _likes, __)).to.be.true",
                  "err": {},
                  "uuid": "12c77dc9-af77-4e75-a7cd-67622815acf8",
                  "parentUUID": "2ba2cfd4-ad3f-4433-ae7e-9c5461da3609",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "believe_(_Bob, _likes, _Fish).match Believe, $('x'), _likes, $('y')",
                  "fullTitle": "Matching Clauses believe_(_Bob, _likes, _Fish).match Believe, $('x'), _likes, $('y')",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = believe_(_Bob, _likes, _Fish).match(Believe, $('x'), _likes, $('y'));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "ba9a52cf-5254-458b-a3b8-a35436b414d0",
                  "parentUUID": "2ba2cfd4-ad3f-4433-ae7e-9c5461da3609",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12c77dc9-af77-4e75-a7cd-67622815acf8",
                "ba9a52cf-5254-458b-a3b8-a35436b414d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4f67d741-b4e3-4c18-984e-dd61be35e01e",
              "title": "Messages",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "assert_(Believe, _Bob, _likes, _Fish).match Assert, Believe, $('x'), _likes, $('y')",
                  "fullTitle": "Matching Messages assert_(Believe, _Bob, _likes, _Fish).match Assert, Believe, $('x'), _likes, $('y')",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = assert_(Believe, _Bob, _likes, _Fish).match(Assert, Believe, $('x'), _likes, $('y'));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "7d17e820-8e0f-4090-a426-6dbedd37d104",
                  "parentUUID": "4f67d741-b4e3-4c18-984e-dd61be35e01e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d17e820-8e0f-4090-a426-6dbedd37d104"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "deb1c5c7-4512-40c8-9261-0cf37d723687",
              "title": "Triggers",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "fullTitle": "Matching Triggers onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = onAssert(Believe, $('x'), _likes, $('y')).match(assert_(Believe, _Bob, _likes, _Fish));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "f90a75cc-d387-4555-996a-86609c49cdbf",
                  "parentUUID": "deb1c5c7-4512-40c8-9261-0cf37d723687",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "onAssert(Believe, $('x'), _likes, $('y')).match attempt_(Believe, _Bob, _likes, _Fish)",
                  "fullTitle": "Matching Triggers onAssert(Believe, $('x'), _likes, $('y')).match attempt_(Believe, _Bob, _likes, _Fish)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = onAssert(Believe, $('x'), _likes, $('y')).match(attempt_(Believe, _Bob, _likes, _Fish));\nreturn expect(result).to.be.false;",
                  "err": {},
                  "uuid": "b768a102-d7ad-471d-ae52-8805a26f370a",
                  "parentUUID": "deb1c5c7-4512-40c8-9261-0cf37d723687",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f90a75cc-d387-4555-996a-86609c49cdbf",
                "b768a102-d7ad-471d-ae52-8805a26f370a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6791e007-a518-4ea9-8933-39d6929cbe48",
              "title": "Triggers with Xtras",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/match.js",
              "file": "/test/src/match.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "fullTitle": "Matching Triggers with Xtras onAssert(Believe, $('x'), _likes, $('y')).match assert_(Believe, _Bob, _likes, _Fish)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = onAssert(Believe, $('x'), _likes, $('y')).match(assert_(Believe, _Bob, _likes, _Fish));\nexpect(result).to.have.property('$x', _Bob);\nreturn expect(result).to.have.property('$y', _Fish);",
                  "err": {},
                  "uuid": "83e6b318-a7b6-456c-9ba3-bc867bdf3a68",
                  "parentUUID": "6791e007-a518-4ea9-8933-39d6929cbe48",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83e6b318-a7b6-456c-9ba3-bc867bdf3a68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06b3bb05-523f-4128-89ec-37c083d5dd3e",
          "title": "Message",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/message.js",
          "file": "/test/src/message.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3c20351c-90fc-4c3d-9c62-1b45640b964c",
              "title": "@match",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/message.js",
              "file": "/test/src/message.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Message @match should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = new Context();\nconst c1 = believe_(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = believe_(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.h2(\"All Clauses\");\n$$._(String(ctx));\n$$._(ctx);\n$$.h2('Message Matching');\nconst m = new Assert(c1);\n$$._(m.match(Assert, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Retract, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Assert, Believe, _Joe, _likes, _Fish));\nreturn $$._(m.match(Assert, Achieve, _Joe, _likes, _Fish));",
                  "err": {},
                  "uuid": "82a2e38a-267b-4100-9754-bd3cfac15e2f",
                  "parentUUID": "3c20351c-90fc-4c3d-9c62-1b45640b964c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82a2e38a-267b-4100-9754-bd3cfac15e2f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "870da7eb-662e-46ae-825d-82caffdbab05",
          "title": "Module",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/module.js",
          "file": "/test/src/module.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6931be53-9d95-4830-8a71-c86df11e77e3",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/module.js",
              "file": "/test/src/module.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Module @action should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = context_();\nconst c1 = believe_(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = believe_(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Assert(c1);\n$$.$('Begin Task Execution');\nconst exports = module_(function() {\n  this.def(new Trigger(Assert, Believe, __, _likes, _Fish), function() {\n    const self = this;\n    return this.task(function() {\n      $$._('Task Fire 1:');\n      return this.perform(self.msg.data.subj, _get, _Fish);}).task(() => $$._('Task Fire 2:'));\n  });\n  this.def(new Trigger(Attempt, Achieve, __, _get, _Fish), function() {\n    const self = this;\n    return this.task(() => $$._(_$(self.msg.data.subj) + ' is getting Fish.'));\n  });\n  this.defg(new Trigger(Attempt, Achieve, null, _impasse, null), () => //$$._ String(this.rnr.ctx)\n  $$._('Impassed'));\n  return this.post(m);\n});\n\nreturn runner_().run(exports);",
                  "err": {},
                  "uuid": "bfed5d8b-de6a-4fff-b17d-47f381301352",
                  "parentUUID": "6931be53-9d95-4830-8a71-c86df11e77e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bfed5d8b-de6a-4fff-b17d-47f381301352"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa78169d-e01e-47fc-a334-f9fcc3a187be",
          "title": "TNode",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/node.js",
          "file": "/test/src/node.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "TNode should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let node;\n$$.$('class Plain');\n$$._(Plain);\n//\n$$.$('class Node');\n$$._(Node.toString());\n$$.$('class Node.prototype');\n$$._(Node.prototype);\n//\n$$.$('class DerivedNode');\n$$._(DerivedNode.toString());\n$$.$('class DerivedNode.prototype');\n$$._(DerivedNode.prototype);\n//\n$$.$('n1.Node');\nconst n1 = new Node();\nn1.node1 = 0;\nn1.node2 = 2;\nn1.node1 = 1;\n$$._(n1);\n$$.$('nodes');\nfor (node of n1) {\n  $$._(node);\n}\n$$.$('n2.DerivedNode');\nconst n2 = new DerivedNode(3);\n$$._(n2);\n$$.$('nodes');\nfor (node of n2) {\n  $$._(node);\n}",
              "err": {},
              "uuid": "d525faf0-8a3e-4e97-bfd8-622af9cd58c9",
              "parentUUID": "fa78169d-e01e-47fc-a334-f9fcc3a187be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d525faf0-8a3e-4e97-bfd8-622af9cd58c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a86caff-63f5-4a73-8f5d-0106194b11d8",
          "title": "Parallel",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/parallel.js",
          "file": "/test/src/parallel.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5226657f-877f-4ed2-9530-85caa845a23e",
              "title": "@action",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/parallel.js",
              "file": "/test/src/parallel.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Parallel @action should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = parallel_(function() {\n  this.counter(1, 5, function() {\n    const counter1 = this;\n    return this.task(() => $$.log(`Counter 1:  ${counter1.value}`));\n  });\n  return this.counter(1, 10, function() {\n    const counter2 = this;\n    return this.task(() => $$.log(`Counter 2:  ${counter2.value}`));\n  });\n});\nreturn runner_().run(t1);",
                  "err": {},
                  "uuid": "8286916c-88a1-4160-8f0b-46f2af86db68",
                  "parentUUID": "5226657f-877f-4ed2-9530-85caa845a23e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8286916c-88a1-4160-8f0b-46f2af86db68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "791bdccf-2094-45d5-9969-a1965874029a",
          "title": "Propose",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/propose.js",
          "file": "/test/src/propose.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Propose should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\n$$._(String(ctx));\nconst m = new Propose(new Achieve(_Bob, _eat, _Fish));\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Attempt, Achieve, __, _eat, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} buying Fish`);\n});\nrnr.def(new Trigger(Attempt, Achieve, __, _eat, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} catching Fish`);\n});\nrnr.def(new Trigger(Attempt, Achieve, null, _impasse, null), () => //$$._ String(this.rnr.ctx)\n$$._('Impassed'));\nrnr.post(m);\nreturn rnr.run();",
              "err": {},
              "uuid": "b658035f-eb2e-4eb6-afc0-4e4ee349a1c7",
              "parentUUID": "791bdccf-2094-45d5-9969-a1965874029a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b658035f-eb2e-4eb6-afc0-4e4ee349a1c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a69c1acd-0c26-4a6b-b2c4-a74e12edd149",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qfilter.js",
          "file": "/test/src/qfilter.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "622ee098-7c07-4bb7-90e4-bf7c288ff518",
              "title": "Filter",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qfilter.js",
              "file": "/test/src/qfilter.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query Filter should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('bob.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst _$x = new Variable('$x');\nconst _$y = new Variable('$y');\nconst _$z = new Variable('$z');\n$$.$(`\\\nctx.query Believe, _$x, _likes, _$y\n.and Believe, _$z, _likes, _$y\\\n`\n);\nctx.query(Believe, _$x, _likes, _$y)\n.and(Believe, _$z, _likes, _$y)\n.exec(binder => $$._(binder));\n$$.$(`\\\nctx.query Believe, _$x, _likes, _$y\n.and Believe, _$z, _likes, _$y\n.filter (binder) -> binder.$x != binder.$z\\\n`\n);\nreturn ctx.query(Believe, _$x, _likes, _$y)\n.and(Believe, _$z, _likes, _$y)\n.filter(function(binder) { const {$x, $z} = binder; return $x !== $z; })\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "2e80df8e-13b4-4262-84df-09cab2caaa68",
                  "parentUUID": "622ee098-7c07-4bb7-90e4-bf7c288ff518",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e80df8e-13b4-4262-84df-09cab2caaa68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1267e0ac-5088-4178-97ad-9344316b18e8",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qnegclause.js",
          "file": "/test/src/qnegclause.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "65f5aaed-a80f-4c95-9f17-d39af3874e6e",
              "title": "NegClause",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qnegclause.js",
              "file": "/test/src/qnegclause.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query NegClause should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('bob.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst _$x = new Variable('$x');\nconst _$y = new Variable('$y');\nconst _$z = new Variable('$z');\n$$.$(`\\\nctx.query Believe, _$x, _likes, _$y\n.not Believe, _$x, _likes, _Chips\\\n`\n);\nreturn ctx.query(Believe, _$x, _likes, _Fish)\n.not(Believe, _$x, _likes, _Chips)\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "097e4596-ed56-4463-ba2f-cf085ee8dcdc",
                  "parentUUID": "65f5aaed-a80f-4c95-9f17-d39af3874e6e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "097e4596-ed56-4463-ba2f-cf085ee8dcdc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83c5061f-1410-4b71-9e55-6b5e1862f5dd",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qtyped.js",
          "file": "/test/src/qtyped.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5d70fda9-3e45-4446-b019-0147073b0c28",
              "title": "Typed",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/qtyped.js",
              "file": "/test/src/qtyped.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query Typed should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('blocks.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst $x = new Variable('$x', v => v instanceof Block);\nconst $y = new Variable('$y');\n$$.$(\"ctx.query Believe, $x, _on, $y\");\nreturn ctx.query(Believe, $x, _on, $y)\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "b6ba243f-0145-4899-8cda-40ab54c1d0af",
                  "parentUUID": "5d70fda9-3e45-4446-b019-0147073b0c28",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6ba243f-0145-4899-8cda-40ab54c1d0af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e87c6084-0b8a-4182-9ee7-4f45561666de",
          "title": "Query",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/query.js",
          "file": "/test/src/query.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d0bd5e19-20b1-4a73-8824-9eae16067dfb",
              "title": "Basic",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/query.js",
              "file": "/test/src/query.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Query Basic should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = yamlcontext_().load($$.dataPath('cleavers.yml'));\n$$.h2(\"All Clauses\");\n$$._(ctx.toString());\n$$.h2('Binders');\nconst _$x = new Variable('$x');\nconst _$d = new Variable('$d');\nconst _$w = new Variable('$w');\n$$.$(\"ctx.query Believe, _$x, _dad, _$d\");\nctx.query(Believe, _$x, _dad, _$d)\n.exec(binder => $$._(binder));\n$$.$(`\\\nctx.query Believe, _$x, _dad, _$d\n.and Believe, _$d, _wife, _$w\\\n`\n);\nreturn ctx.query(Believe, _$x, _dad, _$d)\n.and(Believe, _$d, _wife, _$w)\n.exec(binder => $$._(binder));",
                  "err": {},
                  "uuid": "9908518a-0579-4301-bcb6-da85a6089c4c",
                  "parentUUID": "d0bd5e19-20b1-4a73-8824-9eae16067dfb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9908518a-0579-4301-bcb6-da85a6089c4c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8944a03-a7da-4962-a80e-77cea5961363",
          "title": "Retract",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/retract.js",
          "file": "/test/src/retract.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Retract should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let c;\nconst rnr = new Runner();\nconst {\n  ctx\n} = rnr;\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"Context Before\");\nfor (c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Retract(c1);\n$$.$('Begin Task Execution');\nrnr.def(new Trigger(Retract, Believe, __, _likes, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} doesn't like Fish`);\n});\nrnr.post(m);\nreturn rnr.run().then(function() {\n  $$.$(\"Context After\");\n  for (c of ctx.clauses) {\n    $$._(c.toString());\n  }\n});",
              "err": {},
              "uuid": "21c2ce66-c1c5-4b9f-ba5b-c2514832d86d",
              "parentUUID": "e8944a03-a7da-4962-a80e-77cea5961363",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21c2ce66-c1c5-4b9f-ba5b-c2514832d86d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e18a148a-fd56-46d1-8eb2-dc5d83e5d748",
          "title": "Rule",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/rule.js",
          "file": "/test/src/rule.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "aa8ea05a-5c12-4562-8511-2da9adcbf457",
              "title": "@fire",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/rule.js",
              "file": "/test/src/rule.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Rule @fire should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = new Context();\nconst c1 = new Believe(_Bob, _likes, _Fish);\nctx.add(c1);\nconst c2 = new Believe(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.$(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\nconst m = new Assert(c1);\n$$.$('Begin Task Execution');\nconst rnr = new Runner();\nrnr.def(new Trigger(Assert, Believe, __, _likes, _Fish), function() {\n  const $x = this.msg.data.subj;\n  return this.task(function() {\n    $$._('A');\n    return this.perform($x, _get, _Fish);}).task(() => $$._('B'));\n});\nrnr.def(new Trigger(Attempt, Achieve, __, _get, _Fish),  function() {\n  const $x = this.msg.data.subj;\n  return $$._(_$($x) + ' is getting Fish.');\n});\nrnr.post(m);\nreturn rnr.run();",
                  "err": {},
                  "uuid": "c668062a-16d2-44b5-ae61-ddd23ee2ccde",
                  "parentUUID": "aa8ea05a-5c12-4562-8511-2da9adcbf457",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c668062a-16d2-44b5-ae61-ddd23ee2ccde"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a39c0f3b-ac8b-420d-97ba-d039d2193ddf",
          "title": "Runner",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/runner.js",
          "file": "/test/src/runner.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Runner \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.pushLogger();\nreturn this.$('Baba');",
              "err": {},
              "uuid": "64df5096-2c07-4590-b493-be0c85086404",
              "parentUUID": "a39c0f3b-ac8b-420d-97ba-d039d2193ddf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Runner \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.$('Yaga');\nreturn this.popLogger();",
              "err": {},
              "uuid": "28a0bb1f-3341-4595-ada9-2cde3ef4a112",
              "parentUUID": "a39c0f3b-ac8b-420d-97ba-d039d2193ddf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1d178e5f-075d-41d2-a226-df52e21fa961",
              "title": "@run",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/runner.js",
              "file": "/test/src/runner.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Runner @run should work",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "runner_(__main).run()",
                  "err": {},
                  "uuid": "febe9a54-6c33-4713-9f28-e9826b4d4b04",
                  "parentUUID": "1d178e5f-075d-41d2-a226-df52e21fa961",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "febe9a54-6c33-4713-9f28-e9826b4d4b04"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "355eea77-708a-4915-94c9-3dbf55daed14",
          "title": "Sequence",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/sequence.js",
          "file": "/test/src/sequence.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "068b97d6-bf71-4434-9c32-858079bfba3d",
              "title": "In Parallel",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/sequence.js",
              "file": "/test/src/sequence.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Sequence In Parallel should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = sequence_(function() {\n  this.task(() => $$._('A'));\n  this.task(() => $$._('B'));\n  return this.task(() => $$._('C'));\n});\nconst t2 = sequence_(function() {\n  this.task(() => $$._('D'));\n  this.task(function() {\n    $$._('E');\n    return this.fail();\n  });\n  return this.task(() => $$._('F'));\n});\nreturn runner_().run(t1, t2);",
                  "err": {},
                  "uuid": "9d7d8285-49a9-4d85-8034-5fb597a748bb",
                  "parentUUID": "068b97d6-bf71-4434-9c32-858079bfba3d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d7d8285-49a9-4d85-8034-5fb597a748bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "911e1d19-0357-4abb-aaea-b9a13f08355a",
          "title": "Streamer",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/streamer.js",
          "file": "/test/src/streamer.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1ea88354-923e-4151-8ba2-9c71c9673539",
              "title": "@chain",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/streamer.js",
              "file": "/test/src/streamer.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Streamer @chain should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const t1 = chain_(function() {\n  return this.chain(new ReadFile($$.dataPath('test.txt')))\n  .chain(new ConsoleWriter);\n});\nreturn runner_().run(t1);",
                  "err": {},
                  "uuid": "a79e4325-8936-4b53-bc16-abef20e9201f",
                  "parentUUID": "1ea88354-923e-4151-8ba2-9c71c9673539",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a79e4325-8936-4b53-bc16-abef20e9201f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3d69c22f-ddad-4183-9198-d4dca2ad172e",
          "title": "Stringer",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/stringer.js",
          "file": "/test/src/stringer.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Stringer should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stringer = new Stringer();\nstringer.write('Hello');\nstringer.write('World');\n$$._(stringer);\n$$._(stringer.toString());\nreturn $$._(String(stringer));",
              "err": {},
              "uuid": "40c64ea4-4b38-42da-8860-18ce3508d29d",
              "parentUUID": "3d69c22f-ddad-4183-9198-d4dca2ad172e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40c64ea4-4b38-42da-8860-18ce3508d29d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f8080723-d1ca-4cd4-8eea-28b5b6abcc60",
          "title": "Term",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/typed.js",
          "file": "/test/src/typed.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "778c55f1-200a-4b9d-9bd1-16f43790ba0c",
              "title": "typed",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/typed.js",
              "file": "/test/src/typed.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Term typed should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//t = $_ 'Block1', 'Block'\nclass Table extends Term {}\nconst t1 = $_('Table1', Table);\n$$._(t1);\nconst t2 = $_('Block1', 'Block');\nreturn $$._(t2);",
                  "err": {},
                  "uuid": "1448f449-309f-4efc-8c41-dd04d8854863",
                  "parentUUID": "778c55f1-200a-4b9d-9bd1-16f43790ba0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1448f449-309f-4efc-8c41-dd04d8854863"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "34db896f-9df4-4fcb-a933-196969176365",
          "title": "Unit",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/unit.js",
          "file": "/test/src/unit.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "eef436f8-6861-45f3-ae4a-6563ee3529cc",
              "title": "test",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/unit.js",
              "file": "/test/src/unit.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Unit test should work",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let {$$, unit_} = require('./common');\n$$ = unit_(module, $$);\nreturn $$._($$.stringify($$));",
                  "err": {},
                  "uuid": "3af14469-b82c-4839-9e28-ac7338ba08bf",
                  "parentUUID": "eef436f8-6861-45f3-ae4a-6563ee3529cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3af14469-b82c-4839-9e28-ac7338ba08bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c2fcb71-cb55-4015-9464-7b4e1cdbfc62",
          "title": "Clause",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/xtra.js",
          "file": "/test/src/xtra.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "af2f258a-0e35-41e6-8153-ed5451bb17f9",
              "title": "@xtra",
              "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/xtra.js",
              "file": "/test/src/xtra.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work",
                  "fullTitle": "Clause @xtra should work",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const ctx = context_();\nconst c1 = believe_(_Bob, _likes, _Tuna, {with: _Cheese});\nctx.add(c1);\nconst c2 = believe_(_Joe, _likes, _Peas);\nctx.add(c2);\n$$.h2(\"All Clauses\");\nfor (let c of ctx.clauses) {\n  $$._(c.toString());\n}\n$$.h2(\"Find in Context\");\nlet r = ctx.find(Believe, _Bob, _likes, _Tuna);\n$$.$(\"< Bob likes Tuna >\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, _Tuna);\n$$.$(\"< __ likes Tuna >\");\n$$._(r.toString());\nr = ctx.find(Believe, __, _likes, __);\n$$.$(\"< __ likes __ >\");\n$$._(r.toString());\n$$.h2(\"Message Matches\");\nconst m = new Assert(c1);\n$$._(m.match(Assert, Believe, __, _likes, _Tuna));\n$$._(m.match(Assert, Believe, _Bob, _likes, _Tuna));\n$$._(m.match(Assert, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Retract, Believe, _Bob, _likes, _Fish));\n$$._(m.match(Assert, Believe, _Joe, _likes, _Fish));\nconst rnr = runner_();\nrnr.def(new OnAssert(Believe, __, _likes, _Tuna), function() {\n  const $x = this.msg.data.subj;\n  return this.task(function() {\n    $$._('A');\n    return this.perform($x, _get, _Fish);}).task(() => $$._('B'));\n});\nrnr.def(new OnAttempt(Achieve, __, _get, _Fish),  function() {\n  const $x = this.msg.data.subj;\n  return $$._(`${$x} is getting Fish.`);\n});\nrnr.post(m);\nreturn rnr.run();",
                  "err": {},
                  "uuid": "cb0f8e2e-5848-4892-bf7d-cf1e3fc9e5d1",
                  "parentUUID": "af2f258a-0e35-41e6-8153-ed5451bb17f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb0f8e2e-5848-4892-bf7d-cf1e3fc9e5d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d5b724cf-f5d3-4dfa-9021-d175df47df2d",
          "title": "Yaml",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/yaml.js",
          "file": "/test/src/yaml.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "Yaml should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get document, or throw exception on error\ntry {\n  const doc = yaml.safeLoad(fs.readFileSync($$.dataPath('cleavers.yml'), 'utf8'));\n  return console.log(doc);\n} catch (e) {\n  return console.log(e);\n}",
              "err": {},
              "uuid": "1ecc14dc-56aa-4643-b65f-1b3700e45a11",
              "parentUUID": "d5b724cf-f5d3-4dfa-9021-d175df47df2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ecc14dc-56aa-4643-b65f-1b3700e45a11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b4e679a2-fb10-460f-8a98-711575ab1555",
          "title": "YamlContext",
          "fullFile": "/home/kurtis/Dev/botworx-javascript/packages/miajs/test/src/yamlcontext.js",
          "file": "/test/src/yamlcontext.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "YamlContext should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const ctx = new YamlContext().load($$.dataPath('cleavers.yml'));\n$$._(ctx);\nreturn ctx.clauses.map((c) =>\n  $$._(_$(c)));",
              "err": {},
              "uuid": "7e900adc-6b49-4c85-844d-23d2a381bba0",
              "parentUUID": "b4e679a2-fb10-460f-8a98-711575ab1555",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e900adc-6b49-4c85-844d-23d2a381bba0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "./test/report"
      },
      "version": "4.1.0"
    }
  }
}